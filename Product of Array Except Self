case 1:
class Solution {
    public int[] productExceptSelf(int[] nums) {
        int[] result = new int[nums.length];

        int[] t1 = new int[nums.length];
        int[] t2 = new int[nums.length];

        t1[0] = 1;
        t2[nums.length-1] = 1;

        for(int i = 0; i<nums.length-1;i++){
            t1[i+1] = nums[i] * t1[i];
        }

        for(int i=nums.length-1;i>0; i--){
            t2[i - 1] = t2[i] * nums[i];
        }

        for(int i=0; i<nums.length;i++){
            result[i] = t1[i] * t2[i];
        }
        return result;
    }
}

case 2:
class Solution {
    public int[] productExceptSelf(int[] nums) {
        if(nums == null || nums.length == 0)
        return new int[0];

        int[] result = new int[nums.length];

        int rp = 1;

        //left pass
        for(int i = 0; i < nums.length; i++){
            result[i] = rp;
            rp = rp * nums[i];
        }

        //Right pass
        
        rp = 1;
        for(int i = nums.length - 1; i >= 0 ; i--){
            result[i] = result[i] * rp;
            rp = rp * nums[i];
        }
        return result;

    }
}
